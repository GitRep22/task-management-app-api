{
  "C:\\Users\\Admin\\OneDrive\\Documents\\Projects_GitHub\\task-management-app\\backend\\serverless.yml": {
    "versionFramework": "4.9.1",
    "servicePath": "C:\\Users\\Admin\\OneDrive\\Documents\\Projects_GitHub\\task-management-app\\backend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "task-management-backend",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "ap-northeast-1",
        "environment": {
          "DYNAMODB_TABLE": "tasks_table-dev",
          "TASKS_TABLE": "tasks_table-dev"
        },
        "httpApi": {
          "cors": {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ],
            "allowedHeaders": [
              "Content-Type",
              "Authorization"
            ]
          }
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem",
              "dynamodb:Scan"
            ],
            "Resource": "arn:aws:dynamodb:ap-northeast-1:*:table/tasks_table-dev"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "TasksLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/task-management-backend-dev-tasks"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "task-management-backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Scan"
                          ],
                          "Resource": "arn:aws:dynamodb:ap-northeast-1:*:table/tasks_table-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "task-management-backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "TasksLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
                  "S3Key": "serverless/task-management-backend/dev/1742857033878-2025-03-24T22:57:13.878Z/task-management-backend.zip"
                },
                "Handler": "handler.app",
                "Runtime": "nodejs18.x",
                "FunctionName": "task-management-backend-dev-tasks",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE": "tasks_table-dev",
                    "TASKS_TABLE": "tasks_table-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "TasksLogGroup"
              ]
            },
            "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "TasksLambdaFunction"
                },
                "CodeSha256": "zAQA8q38lL2MV75KwTYAAVf1PjdInGvnVoPOMOuO4gk="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-task-management-backend",
                "ProtocolType": "HTTP",
                "CorsConfiguration": {
                  "AllowCredentials": "<REDACTED>",
                  "AllowHeaders": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "AllowMethods": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE"
                  ],
                  "AllowOrigins": [
                    "*"
                  ]
                }
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "TasksLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "TasksLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationTasks": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "TasksLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetTasks": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /tasks",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTasks"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTasks"
            },
            "HttpApiRoutePostTasks": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /tasks",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTasks"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTasks"
            },
            "HttpApiRouteGetTasksIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /tasks/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTasks"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTasks"
            },
            "HttpApiRoutePutTasksIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "PUT /tasks/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTasks"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTasks"
            },
            "HttpApiRouteDeleteTasksIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "DELETE /tasks/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTasks"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTasks"
            },
            "HttpApiRouteGetApiDashdocs": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /api-docs",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTasks"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTasks"
            },
            "TasksTable": {
              "Type": "AWS::DynamoDB::Table",
              "DeletionPolicy": "Retain",
              "Properties": {
                "TableName": "tasks_table-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "N"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
              "Export": {
                "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "TasksLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ"
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-TasksLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "tasks": {
          "handler": "handler.app",
          "environment": {
            "DYNAMODB_TABLE": "tasks_table-dev"
          },
          "events": [
            {
              "httpApi": {
                "path": "/tasks",
                "method": "GET"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/tasks"
            },
            {
              "httpApi": {
                "path": "/tasks",
                "method": "POST"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/tasks"
            },
            {
              "httpApi": {
                "path": "/tasks/{id}",
                "method": "GET"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/tasks/{id}"
            },
            {
              "httpApi": {
                "path": "/tasks/{id}",
                "method": "PUT"
              },
              "resolvedMethod": "PUT",
              "resolvedPath": "/tasks/{id}"
            },
            {
              "httpApi": {
                "path": "/tasks/{id}",
                "method": "DELETE"
              },
              "resolvedMethod": "DELETE",
              "resolvedPath": "/tasks/{id}"
            },
            {
              "httpApi": {
                "path": "/api-docs",
                "method": "GET"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/api-docs"
            }
          ],
          "name": "task-management-backend-dev-tasks",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ"
        }
      },
      "resources": {
        "Resources": {
          "TasksTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "TableName": "tasks_table-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "ap-northeast-1",
      "environment": {
        "DYNAMODB_TABLE": "tasks_table-dev",
        "TASKS_TABLE": "tasks_table-dev"
      },
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "*"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "allowedHeaders": [
            "Content-Type",
            "Authorization"
          ]
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:Scan"
          ],
          "Resource": "arn:aws:dynamodb:ap-northeast-1:*:table/tasks_table-dev"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "TasksLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/task-management-backend-dev-tasks"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "task-management-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:Scan"
                        ],
                        "Resource": "arn:aws:dynamodb:ap-northeast-1:*:table/tasks_table-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "task-management-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "TasksLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
                "S3Key": "serverless/task-management-backend/dev/1742857033878-2025-03-24T22:57:13.878Z/task-management-backend.zip"
              },
              "Handler": "handler.app",
              "Runtime": "nodejs18.x",
              "FunctionName": "task-management-backend-dev-tasks",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "tasks_table-dev",
                  "TASKS_TABLE": "tasks_table-dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TasksLogGroup"
            ]
          },
          "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TasksLambdaFunction"
              },
              "CodeSha256": "zAQA8q38lL2MV75KwTYAAVf1PjdInGvnVoPOMOuO4gk="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-task-management-backend",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowCredentials": "<REDACTED>",
                "AllowHeaders": [
                  "Content-Type",
                  "Authorization"
                ],
                "AllowMethods": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "TasksLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TasksLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationTasks": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "TasksLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetTasks": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /tasks",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTasks"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTasks"
          },
          "HttpApiRoutePostTasks": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /tasks",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTasks"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTasks"
          },
          "HttpApiRouteGetTasksIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /tasks/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTasks"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTasks"
          },
          "HttpApiRoutePutTasksIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /tasks/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTasks"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTasks"
          },
          "HttpApiRouteDeleteTasksIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /tasks/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTasks"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTasks"
          },
          "HttpApiRouteGetApiDashdocs": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api-docs",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTasks"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTasks"
          },
          "TasksTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "TableName": "tasks_table-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
            "Export": {
              "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "TasksLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ"
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-TasksLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: task-management-backend\r\nframeworkVersion: \"4\"\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: ap-northeast-1\r\n  environment:\r\n    DYNAMODB_TABLE: ${env:DYNAMODB_TABLE, 'tasks_table-dev'}\r\n    TASKS_TABLE: ${self:provider.environment.DYNAMODB_TABLE}\r\n  httpApi:\r\n    cors:\r\n      allowedOrigins:\r\n        - \"*\" \r\n      allowedMethods:\r\n        - GET\r\n        - POST\r\n        - PUT\r\n        - DELETE\r\n      allowedHeaders:\r\n        - Content-Type\r\n        - Authorization\r\n\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:PutItem\r\n        - dynamodb:GetItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n        - dynamodb:Scan\r\n      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}\r\n\r\nfunctions:\r\n  tasks:\r\n    handler: handler.app\r\n    environment:\r\n      DYNAMODB_TABLE: ${self:provider.environment.DYNAMODB_TABLE}\r\n    events:\r\n      - httpApi:\r\n          path: /tasks\r\n          method: GET\r\n      - httpApi:\r\n          path: /tasks\r\n          method: POST\r\n      - httpApi:\r\n          path: /tasks/{id}\r\n          method: GET\r\n      - httpApi:\r\n          path: /tasks/{id}\r\n          method: PUT\r\n      - httpApi:\r\n          path: /tasks/{id}\r\n          method: DELETE\r\n      - httpApi:\r\n          path: /api-docs\r\n          method: GET\r\n\r\nresources:\r\n  Resources:\r\n    TasksTable:\r\n      Type: AWS::DynamoDB::Table\r\n      DeletionPolicy: Retain\r\n      Properties:\r\n        TableName: ${self:provider.environment.DYNAMODB_TABLE}\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: N  \r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n\r\nplugins:\r\n  - serverless-offline\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "50e24b89-1b71-4968-9522-88462a24339f",
    "orgName": "charlesmichaelramos",
    "userId": "f5Dm7g0xX23XfLyqqD",
    "userName": "charlesmichaelramos",
    "serviceProviderAwsAccountId": "782483303647",
    "serviceProviderAwsCfStackName": "task-management-backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-northeast-1:782483303647:stack/task-management-backend-dev/d96895f0-08dd-11f0-9b9b-0e5a37f416cb",
    "serviceProviderAwsCfStackCreated": "2025-03-24T18:28:57.802Z",
    "serviceProviderAwsCfStackUpdated": "2025-03-24T22:53:28.793Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "TasksLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-northeast-1:782483303647:function:task-management-backend-dev-tasks:24",
        "Description": "Current Lambda function version",
        "ExportName": "sls-task-management-backend-dev-TasksLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "te6tj7edk6",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-task-management-backend-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
        "ExportName": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://te6tj7edk6.execute-api.ap-northeast-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-task-management-backend-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "TasksLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/task-management-backend-dev-tasks"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "task-management-backend",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Scan"
                      ],
                      "Resource": "arn:aws:dynamodb:ap-northeast-1:*:table/tasks_table-dev"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "task-management-backend",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "TasksLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
              "S3Key": "serverless/task-management-backend/dev/1742857033878-2025-03-24T22:57:13.878Z/task-management-backend.zip"
            },
            "Handler": "handler.app",
            "Runtime": "nodejs18.x",
            "FunctionName": "task-management-backend-dev-tasks",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "DYNAMODB_TABLE": "tasks_table-dev",
                "TASKS_TABLE": "tasks_table-dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "TasksLogGroup"
          ]
        },
        "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "TasksLambdaFunction"
            },
            "CodeSha256": "zAQA8q38lL2MV75KwTYAAVf1PjdInGvnVoPOMOuO4gk="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-task-management-backend",
            "ProtocolType": "HTTP",
            "CorsConfiguration": {
              "AllowHeaders": [
                "Content-Type",
                "Authorization"
              ],
              "AllowMethods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ],
              "AllowOrigins": [
                "*"
              ]
            }
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "TasksLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "TasksLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationTasks": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "TasksLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetTasks": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /tasks",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationTasks"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationTasks"
        },
        "HttpApiRoutePostTasks": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /tasks",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationTasks"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationTasks"
        },
        "HttpApiRouteGetTasksIdVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /tasks/{id}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationTasks"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationTasks"
        },
        "HttpApiRoutePutTasksIdVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "PUT /tasks/{id}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationTasks"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationTasks"
        },
        "HttpApiRouteDeleteTasksIdVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "DELETE /tasks/{id}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationTasks"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationTasks"
        },
        "HttpApiRouteGetApiDashdocs": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /api-docs",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationTasks"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationTasks"
        },
        "TasksTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "TableName": "tasks_table-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-ap-northeast-1-401d0fc8-7716",
          "Export": {
            "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
          }
        },
        "TasksLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "TasksLambdaVersiong6kgqmBaDw8ZfsjFmNk3AVFPHJoBdqSvX2vAnMpiQ"
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-TasksLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}